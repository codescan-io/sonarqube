// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly 1`] = `
<div
  className="overview-panel big-spacer-top"
  data-test="overview__activity-panel"
>
  <h2
    className="overview-panel-title"
  >
    overview.activity
  </h2>
  <div
    className="overview-panel-content"
  >
    <div
      className="display-flex-row"
    >
      <div
        className="display-flex-column flex-1"
      >
        <div
          className="overview-panel-padded display-flex-column flex-1"
        >
          <GraphsHeader
            graph="issues"
            metrics={
              [
                {
                  "id": "bugs",
                  "key": "bugs",
                  "name": "bugs",
                  "type": "PERCENT",
                },
              ]
            }
            updateGraph={[MockFunction]}
          />
          <GraphsHistory
            analyses={[]}
            ariaLabel="overview.activity.graph_shows_data_for_x.metric.bugs.name, metric.code_smells.name, metric.vulnerabilities.name"
            canShowDataAsTable={false}
            graph="issues"
            graphs={
              [
                [
                  {
                    "data": [
                      {
                        "x": 2016-10-27T14:33:50.000Z,
                        "y": 20,
                      },
                    ],
                    "name": "bugs",
                    "translatedName": "bugs",
                    "type": "PERCENT",
                  },
                ],
              ]
            }
            loading={false}
            measuresHistory={
              [
                {
                  "bestValue": true,
                  "history": [
                    {
                      "date": 2016-10-27T14:33:50.000Z,
                      "value": "20",
                    },
                  ],
                  "metric": "bugs",
                  "period": {
                    "bestValue": true,
                    "index": 1,
                    "value": "1.0",
                  },
                  "value": "1.0",
                },
              ]
            }
            series={
              [
                {
                  "data": [
                    {
                      "x": 2016-10-27T14:33:50.000Z,
                      "y": 20,
                    },
                  ],
                  "name": "bugs",
                  "translatedName": "bugs",
                  "type": "PERCENT",
                },
              ]
            }
          />
        </div>
        <div
          className="overview-panel-padded bordered-top text-right"
        >
          <ActivityLink
            branchLike={
              {
                "analysisDate": "2018-01-01",
                "excludedFromPurge": true,
                "isMain": true,
                "name": "master",
              }
            }
            component="my-project"
            graph="issues"
          />
        </div>
      </div>
      <div
        className="overview-panel-padded bordered-left width-30"
      >
        <div
          data-test="overview__activity-analyses"
        >
          <DeferredSpinner
            className="spacer-top spacer-left"
            loading={false}
          >
            <ul
              className="spacer-top spacer-left"
            >
              <Memo(Analysis)
                analysis={
                  {
                    "date": "2017-03-01T09:36:01+0100",
                    "events": [
                      {
                        "category": "QUALITY_GATE",
                        "description": "Lorem ipsum dolor sit amet",
                        "key": "E11",
                        "name": "Lorem ipsum",
                        "qualityGate": {
                          "failing": [
                            {
                              "branch": "master",
                              "key": "foo",
                              "name": "Foo",
                            },
                            {
                              "branch": "feature/bar",
                              "key": "bar",
                              "name": "Bar",
                            },
                          ],
                          "status": "ERROR",
                          "stillFailing": true,
                        },
                      },
                    ],
                    "key": "foo",
                    "projectVersion": "1.0",
                  }
                }
                key="foo"
                qualifier="TRK"
              />
            </ul>
          </DeferredSpinner>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`should render correctly 2`] = `
<div
  className="overview-panel big-spacer-top"
  data-test="overview__activity-panel"
>
  <h2
    className="overview-panel-title"
  >
    overview.activity
  </h2>
  <div
    className="overview-panel-content"
  >
    <div
      className="display-flex-row"
    >
      <div
        className="display-flex-column flex-1"
      >
        <div
          className="overview-panel-padded display-flex-column flex-1"
        >
          <GraphsHeader
            graph="issues"
            metrics={
              [
                {
                  "id": "bugs",
                  "key": "bugs",
                  "name": "bugs",
                  "type": "PERCENT",
                },
              ]
            }
            updateGraph={[MockFunction]}
          />
          <GraphsHistory
            analyses={[]}
            ariaLabel="overview.activity.graph_shows_data_for_x.metric.bugs.name, metric.code_smells.name, metric.vulnerabilities.name"
            canShowDataAsTable={false}
            graph="issues"
            graphs={
              [
                [
                  {
                    "data": [
                      {
                        "x": 2016-10-27T14:33:50.000Z,
                        "y": 20,
                      },
                    ],
                    "name": "bugs",
                    "translatedName": "bugs",
                    "type": "PERCENT",
                  },
                ],
              ]
            }
            loading={true}
            measuresHistory={
              [
                {
                  "bestValue": true,
                  "history": [
                    {
                      "date": 2016-10-27T14:33:50.000Z,
                      "value": "20",
                    },
                  ],
                  "metric": "bugs",
                  "period": {
                    "bestValue": true,
                    "index": 1,
                    "value": "1.0",
                  },
                  "value": "1.0",
                },
              ]
            }
            series={
              [
                {
                  "data": [
                    {
                      "x": 2016-10-27T14:33:50.000Z,
                      "y": 20,
                    },
                  ],
                  "name": "bugs",
                  "translatedName": "bugs",
                  "type": "PERCENT",
                },
              ]
            }
          />
        </div>
        <div
          className="overview-panel-padded bordered-top text-right"
        >
          <ActivityLink
            branchLike={
              {
                "analysisDate": "2018-01-01",
                "excludedFromPurge": true,
                "isMain": true,
                "name": "master",
              }
            }
            component="my-project"
            graph="issues"
          />
        </div>
      </div>
      <div
        className="overview-panel-padded bordered-left width-30"
      >
        <div
          data-test="overview__activity-analyses"
        >
          <DeferredSpinner
            className="spacer-top spacer-left"
            loading={true}
          >
            <p
              className="spacer-top spacer-left note"
            >
              no_results
            </p>
          </DeferredSpinner>
        </div>
      </div>
    </div>
  </div>
</div>
`;
