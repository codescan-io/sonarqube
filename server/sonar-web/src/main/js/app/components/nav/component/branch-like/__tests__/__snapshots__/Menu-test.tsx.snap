// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly 1`] = `
<DropdownOverlay
  className="branch-like-navigation-menu"
  noPadding={true}
>
  <div
    className="search-box-container"
  >
    <SearchBox
      autoFocus={true}
      onChange={[Function]}
      onKeyDown={[Function]}
      placeholder="branch_like_navigation.search_for_branch_like"
      value=""
    />
  </div>
  <div
    className="item-list-container"
  >
    <Memo(MenuItemList)
      branchLikeTree={
        {
          "branchTree": [
            {
              "branch": {
                "analysisDate": "2018-01-01",
                "excludedFromPurge": true,
                "isMain": false,
                "name": "branch-1",
              },
              "pullRequests": [],
            },
            {
              "branch": {
                "analysisDate": "2018-01-01",
                "excludedFromPurge": true,
                "isMain": false,
                "name": "branch-11",
              },
              "pullRequests": [],
            },
            {
              "branch": {
                "analysisDate": "2018-01-01",
                "excludedFromPurge": true,
                "isMain": false,
                "name": "branch-12",
              },
              "pullRequests": [],
            },
            {
              "branch": {
                "analysisDate": "2018-01-01",
                "excludedFromPurge": true,
                "isMain": false,
                "name": "branch-2",
              },
              "pullRequests": [],
            },
            {
              "branch": {
                "analysisDate": "2018-01-01",
                "excludedFromPurge": true,
                "isMain": false,
                "name": "branch-3",
              },
              "pullRequests": [],
            },
          ],
          "mainBranchTree": {
            "branch": {
              "analysisDate": "2018-01-01",
              "excludedFromPurge": true,
              "isMain": true,
              "name": "master",
            },
            "pullRequests": [
              {
                "analysisDate": "2018-01-01",
                "base": "master",
                "branch": "feature/foo/bar",
                "key": "2",
                "target": "master",
                "title": "PR-2",
              },
              {
                "analysisDate": "2018-01-01",
                "base": "master",
                "branch": "feature/foo/bar",
                "key": "1",
                "target": "master",
                "title": "PR-1",
              },
            ],
          },
          "orphanPullRequests": [
            {
              "analysisDate": "2018-01-01",
              "base": "master",
              "branch": "feature/foo/bar",
              "isOrphan": true,
              "key": "2",
              "target": "llb-100",
              "title": "PR-2",
            },
          ],
          "parentlessPullRequests": [],
        }
      }
      component={
        {
          "breadcrumbs": [],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": [
            {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": [],
        }
      }
      hasResults={true}
      onSelect={[Function]}
      selectedBranchLike={
        {
          "analysisDate": "2018-01-01",
          "excludedFromPurge": true,
          "isMain": true,
          "name": "master",
        }
      }
    />
  </div>
  <div
    className="hint-container text-right"
  >
    <ForwardRef(Link)
      onClick={[Function]}
      to={
        {
          "pathname": "/project/branches",
          "search": "?id=my-project",
        }
      }
    >
      branch_like_navigation.manage
    </ForwardRef(Link)>
  </div>
</DropdownOverlay>
`;

exports[`should render correctly with no current branch like 1`] = `
<DropdownOverlay
  className="branch-like-navigation-menu"
  noPadding={true}
>
  <div
    className="search-box-container"
  >
    <SearchBox
      autoFocus={true}
      onChange={[Function]}
      onKeyDown={[Function]}
      placeholder="branch_like_navigation.search_for_branch_like"
      value=""
    />
  </div>
  <div
    className="item-list-container"
  >
    <Memo(MenuItemList)
      branchLikeTree={
        {
          "branchTree": [
            {
              "branch": {
                "analysisDate": "2018-01-01",
                "excludedFromPurge": true,
                "isMain": false,
                "name": "branch-1",
              },
              "pullRequests": [],
            },
            {
              "branch": {
                "analysisDate": "2018-01-01",
                "excludedFromPurge": true,
                "isMain": false,
                "name": "branch-11",
              },
              "pullRequests": [],
            },
            {
              "branch": {
                "analysisDate": "2018-01-01",
                "excludedFromPurge": true,
                "isMain": false,
                "name": "branch-12",
              },
              "pullRequests": [],
            },
            {
              "branch": {
                "analysisDate": "2018-01-01",
                "excludedFromPurge": true,
                "isMain": false,
                "name": "branch-2",
              },
              "pullRequests": [],
            },
            {
              "branch": {
                "analysisDate": "2018-01-01",
                "excludedFromPurge": true,
                "isMain": false,
                "name": "branch-3",
              },
              "pullRequests": [],
            },
          ],
          "mainBranchTree": {
            "branch": {
              "analysisDate": "2018-01-01",
              "excludedFromPurge": true,
              "isMain": true,
              "name": "master",
            },
            "pullRequests": [
              {
                "analysisDate": "2018-01-01",
                "base": "master",
                "branch": "feature/foo/bar",
                "key": "2",
                "target": "master",
                "title": "PR-2",
              },
              {
                "analysisDate": "2018-01-01",
                "base": "master",
                "branch": "feature/foo/bar",
                "key": "1",
                "target": "master",
                "title": "PR-1",
              },
            ],
          },
          "orphanPullRequests": [
            {
              "analysisDate": "2018-01-01",
              "base": "master",
              "branch": "feature/foo/bar",
              "isOrphan": true,
              "key": "2",
              "target": "llb-100",
              "title": "PR-2",
            },
          ],
          "parentlessPullRequests": [],
        }
      }
      component={
        {
          "breadcrumbs": [],
          "key": "my-project",
          "name": "MyProject",
          "qualifier": "TRK",
          "qualityGate": {
            "isDefault": true,
            "key": "30",
            "name": "Sonar way",
          },
          "qualityProfiles": [
            {
              "deleted": false,
              "key": "my-qp",
              "language": "ts",
              "name": "Sonar way",
            },
          ],
          "tags": [],
        }
      }
      hasResults={true}
      onSelect={[Function]}
      selectedBranchLike={
        {
          "analysisDate": "2018-01-01",
          "excludedFromPurge": true,
          "isMain": false,
          "name": "branch-11",
        }
      }
    />
  </div>
  <div
    className="hint-container text-right"
  >
    <ForwardRef(Link)
      onClick={[Function]}
      to={
        {
          "pathname": "/project/branches",
          "search": "?id=my-project",
        }
      }
    >
      branch_like_navigation.manage
    </ForwardRef(Link)>
  </div>
</DropdownOverlay>
`;
