// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Select should render clearIndicator correctly 1`] = `
<ClearButton
  className="button-tiny spacer-left spacer-right text-middle"
  iconProps={
    {
      "size": 12,
    }
  }
/>
`;

exports[`Select should render complex select component: other props 1`] = `
<StateManager
  className="react-select"
  classNamePrefix="react-select"
  components={
    {
      "ClearIndicator": [Function],
      "DropdownIndicator": [Function],
      "Input": [Function],
      "MultiValueRemove": [Function],
    }
  }
  defaultInputValue=""
  defaultMenuIsOpen={false}
  defaultValue={null}
  isClearable={true}
  isLoading={true}
  styles={
    {
      "container": [Function],
      "control": [Function],
      "indicatorsContainer": [Function],
      "input": [Function],
      "loadingIndicator": [Function],
      "menu": [Function],
      "menuList": [Function],
      "menuPortal": [Function],
      "multiValue": [Function],
      "multiValueLabel": [Function],
      "multiValueRemove": [Function],
      "noOptionsMessage": [Function],
      "option": [Function],
      "placeholder": [Function],
      "singleValue": [Function],
      "valueContainer": [Function],
    }
  }
/>
`;

exports[`Select should render correctly: default 1`] = `
<StateManager
  className="react-select"
  classNamePrefix="react-select"
  components={
    {
      "ClearIndicator": [Function],
      "DropdownIndicator": [Function],
      "MultiValueRemove": [Function],
    }
  }
  defaultInputValue=""
  defaultMenuIsOpen={false}
  defaultValue={null}
  styles={
    {
      "container": [Function],
      "control": [Function],
      "indicatorsContainer": [Function],
      "input": [Function],
      "loadingIndicator": [Function],
      "menu": [Function],
      "menuList": [Function],
      "menuPortal": [Function],
      "multiValue": [Function],
      "multiValueLabel": [Function],
      "multiValueRemove": [Function],
      "noOptionsMessage": [Function],
      "option": [Function],
      "placeholder": [Function],
      "singleValue": [Function],
      "valueContainer": [Function],
    }
  }
/>
`;

exports[`Select should render dropdownIndicator correctly 1`] = `<Styled(span) />`;

exports[`Select should render loadingIndicator correctly 1`] = `
<i
  className="deferred-spinner spacer-left spacer-right additional-class"
/>
`;

exports[`Select should render multiValueRemove correctly 1`] = `
<div>
  Ã—
</div>
`;

exports[`should render CreatableSelect correctly 1`] = `
<Creatable
  allowCreateWhileLoading={false}
  cacheOptions={false}
  components={
    {
      "ClearIndicator": [Function],
      "DropdownIndicator": [Function],
      "LoadingIndicator": [Function],
      "MultiValueRemove": [Function],
    }
  }
  createOptionPosition="last"
  defaultOptions={false}
  filterOption={null}
  formatCreateLabel={[Function]}
  getNewOptionData={[Function]}
  getOptionLabel={[Function]}
  getOptionValue={[Function]}
  inputValue=""
  isLoading={false}
  isValidNewOption={[Function]}
  menuIsOpen={false}
  onChange={[Function]}
  onInputChange={[Function]}
  onMenuClose={[Function]}
  onMenuOpen={[Function]}
  options={[]}
  styles={
    {
      "container": [Function],
      "control": [Function],
      "indicatorsContainer": [Function],
      "input": [Function],
      "loadingIndicator": [Function],
      "menu": [Function],
      "menuList": [Function],
      "menuPortal": [Function],
      "multiValue": [Function],
      "multiValueLabel": [Function],
      "multiValueRemove": [Function],
      "noOptionsMessage": [Function],
      "option": [Function],
      "placeholder": [Function],
      "singleValue": [Function],
      "valueContainer": [Function],
    }
  }
  value={null}
/>
`;

exports[`should render SearchSelect correctly 1`] = `
<Select
  aria-live="polite"
  backspaceRemovesValue={true}
  blurInputOnSelect={true}
  cacheOptions={false}
  captureMenuScroll={false}
  className="react-select"
  classNamePrefix="react-select"
  closeMenuOnScroll={false}
  closeMenuOnSelect={true}
  components={
    {
      "ClearIndicator": [Function],
      "DropdownIndicator": [Function],
      "LoadingIndicator": [Function],
      "MultiValueRemove": [Function],
    }
  }
  controlShouldRenderValue={true}
  defaultOptions={false}
  escapeClearsValue={false}
  filterOption={null}
  formatGroupLabel={[Function]}
  getOptionLabel={[Function]}
  getOptionValue={[Function]}
  inputValue=""
  isDisabled={false}
  isLoading={false}
  isMulti={false}
  isOptionDisabled={[Function]}
  isRtl={false}
  isSearchable={true}
  loadingMessage={[Function]}
  maxMenuHeight={300}
  menuIsOpen={false}
  menuPlacement="bottom"
  menuPosition="absolute"
  menuShouldBlockScroll={false}
  menuShouldScrollIntoView={true}
  minMenuHeight={140}
  noOptionsMessage={[Function]}
  onChange={[Function]}
  onInputChange={[Function]}
  onMenuClose={[Function]}
  onMenuOpen={[Function]}
  openMenuOnClick={true}
  openMenuOnFocus={false}
  options={[]}
  pageSize={5}
  placeholder="Select..."
  screenReaderStatus={[Function]}
  styles={
    {
      "container": [Function],
      "control": [Function],
      "indicatorsContainer": [Function],
      "input": [Function],
      "loadingIndicator": [Function],
      "menu": [Function],
      "menuList": [Function],
      "menuPortal": [Function],
      "multiValue": [Function],
      "multiValueLabel": [Function],
      "multiValueRemove": [Function],
      "noOptionsMessage": [Function],
      "option": [Function],
      "placeholder": [Function],
      "singleValue": [Function],
      "valueContainer": [Function],
    }
  }
  tabIndex="0"
  tabSelectsValue={true}
  value={null}
/>
`;
