// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render 1`] = `
<FocusOutHandler
  onFocusOut={[Function]}
>
  <OutsideClickHandler
    onClickOutside={[Function]}
  >
    <EscKeydownHandler
      onKeydown={[Function]}
    >
      <span
        className="date-input-control"
      >
        <injectIntl(Component)
          className="date-input-control-input"
          innerRef={[Function]}
          onFocus={[Function]}
          placeholder="placeholder"
          readOnly={true}
          type="text"
        />
        <CalendarIcon
          className="date-input-control-icon"
          fill=""
        />
      </span>
    </EscKeydownHandler>
  </OutsideClickHandler>
</FocusOutHandler>
`;

exports[`should render 2`] = `
<FocusOutHandler
  onFocusOut={[Function]}
>
  <OutsideClickHandler
    onClickOutside={[Function]}
  >
    <EscKeydownHandler
      onKeydown={[Function]}
    >
      <span
        className="date-input-control"
      >
        <injectIntl(Component)
          className="date-input-control-input is-filled"
          innerRef={[Function]}
          onFocus={[Function]}
          placeholder="placeholder"
          readOnly={true}
          type="text"
          value={2018-01-17T00:00:00.000Z}
        />
        <CalendarIcon
          className="date-input-control-icon"
          fill=""
        />
        <ClearButton
          aria-label="reset_date"
          className="button-tiny date-input-control-reset"
          iconProps={
            {
              "size": 12,
            }
          }
          onClick={[Function]}
        />
      </span>
    </EscKeydownHandler>
  </OutsideClickHandler>
</FocusOutHandler>
`;

exports[`should render 3`] = `
<FocusOutHandler
  onFocusOut={[Function]}
>
  <OutsideClickHandler
    onClickOutside={[Function]}
  >
    <EscKeydownHandler
      onKeydown={[Function]}
    >
      <span
        className="date-input-control"
      >
        <injectIntl(Component)
          className="date-input-control-input is-filled"
          innerRef={[Function]}
          onFocus={[Function]}
          placeholder="placeholder"
          readOnly={true}
          type="text"
          value={2018-01-17T00:00:00.000Z}
        />
        <CalendarIcon
          className="date-input-control-icon"
          fill=""
        />
        <ClearButton
          aria-label="reset_date"
          className="button-tiny date-input-control-reset"
          iconProps={
            {
              "size": 12,
            }
          }
          onClick={[Function]}
        />
        <div
          className="date-input-calendar"
        >
          <DayPicker
            captionLayout="dropdown-buttons"
            disabled={
              {
                "after": 2018-02-05T00:00:00.000Z,
                "before": 2018-01-17T00:00:00.000Z,
              }
            }
            formatters={
              {
                "formatWeekdayName": [Function],
              }
            }
            fromYear={2018}
            mode="default"
            modifiers={
              {
                "highlighted": false,
              }
            }
            modifiersClassNames={
              {
                "highlighted": "highlighted",
              }
            }
            month={2018-01-17T00:00:00.000Z}
            onDayClick={[Function]}
            onDayMouseEnter={[Function]}
            onMonthChange={[Function]}
            selected={2018-01-17T00:00:00.000Z}
            toYear={2018}
            weekStartsOn={1}
          />
        </div>
      </span>
    </EscKeydownHandler>
  </OutsideClickHandler>
</FocusOutHandler>
`;

exports[`should select a day 1`] = `
<FocusOutHandler
  onFocusOut={[Function]}
>
  <OutsideClickHandler
    onClickOutside={[Function]}
  >
    <EscKeydownHandler
      onKeydown={[Function]}
    >
      <span
        className="date-input-control"
      >
        <injectIntl(Component)
          className="date-input-control-input"
          innerRef={[Function]}
          onFocus={[Function]}
          placeholder="placeholder"
          readOnly={true}
          type="text"
        />
        <CalendarIcon
          className="date-input-control-icon"
          fill=""
        />
      </span>
    </EscKeydownHandler>
  </OutsideClickHandler>
</FocusOutHandler>
`;
