// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render 1`] = `
<FocusOutHandler
  onFocusOut={[Function]}
>
  <OutsideClickHandler
    onClickOutside={[Function]}
  >
    <EscKeydownHandler
      onKeydown={[Function]}
    >
      <span
        className="date-input-control"
      >
        <injectIntl(Component)
          className="date-input-control-input"
          innerRef={[Function]}
          onFocus={[Function]}
          placeholder="placeholder"
          readOnly={true}
          type="text"
        />
        <CalendarIcon
          className="date-input-control-icon"
          fill=""
        />
      </span>
    </EscKeydownHandler>
  </OutsideClickHandler>
</FocusOutHandler>
`;

exports[`should render 2`] = `
<FocusOutHandler
  onFocusOut={[Function]}
>
  <OutsideClickHandler
    onClickOutside={[Function]}
  >
    <EscKeydownHandler
      onKeydown={[Function]}
    >
      <span
        className="date-input-control"
      >
        <injectIntl(Component)
          className="date-input-control-input is-filled"
          innerRef={[Function]}
          onFocus={[Function]}
          placeholder="placeholder"
          readOnly={true}
          type="text"
          value={2018-01-17T00:00:00.000Z}
        />
        <CalendarIcon
          className="date-input-control-icon"
          fill=""
        />
        <ClearButton
          aria-label="reset_date"
          className="button-tiny date-input-control-reset"
          iconProps={
            {
              "size": 12,
            }
          }
          onClick={[Function]}
        />
      </span>
    </EscKeydownHandler>
  </OutsideClickHandler>
</FocusOutHandler>
`;

exports[`should render 3`] = `
<FocusOutHandler
  onFocusOut={[Function]}
>
  <OutsideClickHandler
    onClickOutside={[Function]}
  >
    <EscKeydownHandler
      onKeydown={[Function]}
    >
      <span
        className="date-input-control"
      >
        <injectIntl(Component)
          className="date-input-control-input is-filled"
          innerRef={[Function]}
          onFocus={[Function]}
          placeholder="placeholder"
          readOnly={true}
          type="text"
          value={2018-01-17T00:00:00.000Z}
        />
        <CalendarIcon
          className="date-input-control-icon"
          fill=""
        />
        <ClearButton
          aria-label="reset_date"
          className="button-tiny date-input-control-reset"
          iconProps={
            {
              "size": 12,
            }
          }
          onClick={[Function]}
        />
        <form
          className="date-input-calendar"
        >
          <fieldset
            aria-label="date.select_month_and_year_x.January, 2018"
            className="date-input-calendar-nav"
          >
            <ButtonIcon
              aria-label="show_month_x_of_year_y.December.2017"
              className="button-small"
              onClick={[Function]}
            >
              <ChevronLeftIcon />
            </ButtonIcon>
            <div
              className="date-input-calender-month"
            >
              <Select
                aria-label="select_month"
                className="date-input-calender-month-select"
                onChange={[Function]}
                options={
                  [
                    {
                      "label": "Jan",
                      "value": 0,
                    },
                    {
                      "label": "Feb",
                      "value": 1,
                    },
                    {
                      "label": "Mar",
                      "value": 2,
                    },
                    {
                      "label": "Apr",
                      "value": 3,
                    },
                    {
                      "label": "May",
                      "value": 4,
                    },
                    {
                      "label": "Jun",
                      "value": 5,
                    },
                    {
                      "label": "Jul",
                      "value": 6,
                    },
                    {
                      "label": "Aug",
                      "value": 7,
                    },
                    {
                      "label": "Sep",
                      "value": 8,
                    },
                    {
                      "label": "Oct",
                      "value": 9,
                    },
                    {
                      "label": "Nov",
                      "value": 10,
                    },
                    {
                      "label": "Dec",
                      "value": 11,
                    },
                  ]
                }
                value={
                  {
                    "label": "Jan",
                    "value": 0,
                  }
                }
              />
              <Select
                aria-label="select_year"
                className="date-input-calender-month-select spacer-left"
                onChange={[Function]}
                options={
                  [
                    {
                      "label": "2008",
                      "value": 2008,
                    },
                    {
                      "label": "2009",
                      "value": 2009,
                    },
                    {
                      "label": "2010",
                      "value": 2010,
                    },
                    {
                      "label": "2011",
                      "value": 2011,
                    },
                    {
                      "label": "2012",
                      "value": 2012,
                    },
                    {
                      "label": "2013",
                      "value": 2013,
                    },
                    {
                      "label": "2014",
                      "value": 2014,
                    },
                    {
                      "label": "2015",
                      "value": 2015,
                    },
                    {
                      "label": "2016",
                      "value": 2016,
                    },
                    {
                      "label": "2017",
                      "value": 2017,
                    },
                    {
                      "label": "2018",
                      "value": 2018,
                    },
                  ]
                }
                value={
                  {
                    "label": "2018",
                    "value": 2018,
                  }
                }
              />
            </div>
            <ButtonIcon
              aria-label="show_month_x_of_year_y.February.2018"
              className="button-small"
              onClick={[Function]}
            >
              <ChevronRightIcon />
            </ButtonIcon>
          </fieldset>
          <DayPicker
            components={
              {
                "CaptionLabel": [Function],
              }
            }
            disableNavigation={true}
            disabled={
              {
                "after": 2018-02-05T00:00:00.000Z,
                "before": 2018-01-17T00:00:00.000Z,
              }
            }
            formatters={
              {
                "formatWeekdayName": [Function],
              }
            }
            mode="default"
            modifiers={
              {
                "highlighted": false,
              }
            }
            modifiersClassNames={
              {
                "highlighted": "highlighted",
              }
            }
            month={2018-01-17T00:00:00.000Z}
            onDayClick={[Function]}
            onDayMouseEnter={[Function]}
            selected={2018-01-17T00:00:00.000Z}
            weekStartsOn={1}
          />
        </form>
      </span>
    </EscKeydownHandler>
  </OutsideClickHandler>
</FocusOutHandler>
`;

exports[`should select a day 1`] = `
<FocusOutHandler
  onFocusOut={[Function]}
>
  <OutsideClickHandler
    onClickOutside={[Function]}
  >
    <EscKeydownHandler
      onKeydown={[Function]}
    >
      <span
        className="date-input-control"
      >
        <injectIntl(Component)
          className="date-input-control-input"
          innerRef={[Function]}
          onFocus={[Function]}
          placeholder="placeholder"
          readOnly={true}
          type="text"
        />
        <CalendarIcon
          className="date-input-control-icon"
          fill=""
        />
      </span>
    </EscKeydownHandler>
  </OutsideClickHandler>
</FocusOutHandler>
`;
