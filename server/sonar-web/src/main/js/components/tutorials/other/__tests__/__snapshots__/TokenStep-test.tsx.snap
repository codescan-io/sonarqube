// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generates token 1`] = `
<div
  className="boxed-group onboarding-step is-open"
>
  <div
    className="onboarding-step-number"
  >
    1
  </div>
  <div
    className="boxed-group-header"
  >
    <h2>
      onboarding.token.header
    </h2>
  </div>
  <div>
    <div
      className="boxed-group-inner"
    >
      <div>
        <div>
          <Radio
            checked={true}
            onCheck={[Function]}
            value="generate"
          >
            onboarding.token.generate.PROJECT_ANALYSIS_TOKEN
          </Radio>
          <div
            className="big-spacer-top"
          >
            <form
              className="display-flex-center"
              onSubmit={[Function]}
            >
              <div
                className="display-flex-column"
              >
                <label
                  className="h3"
                  htmlFor="generate-token-input"
                >
                  onboarding.token.name.label
                  <DocumentationTooltip
                    className="spacer-left"
                    content="onboarding.token.name.help"
                    links={
                      [
                        {
                          "href": "/user-guide/user-account/generating-and-using-tokens/",
                          "label": "learn_more",
                        },
                      ]
                    }
                  />
                </label>
                <input
                  autoFocus={true}
                  className="input-super-large spacer-right spacer-top text-middle"
                  id="generate-token-input"
                  onChange={[Function]}
                  required={true}
                  type="text"
                  value=""
                />
              </div>
              <div
                className="display-flex-column spacer-left big-spacer-right"
              >
                <label
                  className="h3"
                  htmlFor="token-select-expiration"
                >
                  users.tokens.expires_in
                </label>
                <div
                  className="display-flex-center"
                >
                  <Select
                    className="spacer-top abs-width-100 spacer-right"
                    id="token-select-expiration"
                    isSearchable={false}
                    onChange={[Function]}
                    options={
                      [
                        {
                          "label": "users.tokens.expiration.30",
                          "value": 30,
                        },
                        {
                          "label": "users.tokens.expiration.90",
                          "value": 90,
                        },
                        {
                          "label": "users.tokens.expiration.365",
                          "value": 365,
                        },
                        {
                          "label": "users.tokens.expiration.0",
                          "value": 0,
                        },
                      ]
                    }
                    value={
                      {
                        "label": "users.tokens.expiration.30",
                        "value": 30,
                      }
                    }
                  />
                  <SubmitButton
                    className="text-middle spacer-top"
                    disabled={true}
                  >
                    onboarding.token.generate
                  </SubmitButton>
                </div>
              </div>
            </form>
            <ProjectTokenScopeInfo
              className="width-50"
            />
          </div>
        </div>
        <div
          className="big-spacer-top"
        >
          <Radio
            checked={false}
            onCheck={[Function]}
            value="use-existing"
          >
            onboarding.token.use_existing_token
          </Radio>
        </div>
      </div>
      <div
        className="note big-spacer-top width-50"
      >
        <FormattedMessage
          defaultMessage="onboarding.token.text"
          id="onboarding.token.text"
          values={
            {
              "link": <ForwardRef(Link)
                target="_blank"
                to="/account/security"
              >
                onboarding.token.text.user_account
              </ForwardRef(Link)>,
            }
          }
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`generates token 2`] = `
<div
  className="boxed-group onboarding-step is-open"
>
  <div
    className="onboarding-step-number"
  >
    1
  </div>
  <div
    className="boxed-group-header"
  >
    <h2>
      onboarding.token.header
    </h2>
  </div>
  <div>
    <div
      className="boxed-group-inner"
    >
      <div>
        <div>
          <Radio
            checked={true}
            onCheck={[Function]}
            value="generate"
          >
            onboarding.token.generate.PROJECT_ANALYSIS_TOKEN
          </Radio>
          <div
            className="big-spacer-top"
          >
            <form
              className="display-flex-center"
              onSubmit={[Function]}
            >
              <div
                className="display-flex-column"
              >
                <label
                  className="h3"
                  htmlFor="generate-token-input"
                >
                  onboarding.token.name.label
                  <DocumentationTooltip
                    className="spacer-left"
                    content="onboarding.token.name.help"
                    links={
                      [
                        {
                          "href": "/user-guide/user-account/generating-and-using-tokens/",
                          "label": "learn_more",
                        },
                      ]
                    }
                  />
                </label>
                <input
                  autoFocus={true}
                  className="input-super-large spacer-right spacer-top text-middle"
                  id="generate-token-input"
                  onChange={[Function]}
                  required={true}
                  type="text"
                  value="my token"
                />
              </div>
              <div
                className="display-flex-column spacer-left big-spacer-right"
              >
                <label
                  className="h3"
                  htmlFor="token-select-expiration"
                >
                  users.tokens.expires_in
                </label>
                <div
                  className="display-flex-center"
                >
                  <Select
                    className="spacer-top abs-width-100 spacer-right"
                    id="token-select-expiration"
                    isSearchable={false}
                    onChange={[Function]}
                    options={
                      [
                        {
                          "label": "users.tokens.expiration.30",
                          "value": 30,
                        },
                        {
                          "label": "users.tokens.expiration.90",
                          "value": 90,
                        },
                        {
                          "label": "users.tokens.expiration.365",
                          "value": 365,
                        },
                        {
                          "label": "users.tokens.expiration.0",
                          "value": 0,
                        },
                      ]
                    }
                    value={
                      {
                        "label": "users.tokens.expiration.30",
                        "value": 30,
                      }
                    }
                  />
                  <i
                    className="spinner text-middle"
                  />
                </div>
              </div>
            </form>
            <ProjectTokenScopeInfo
              className="width-50"
            />
          </div>
        </div>
        <div
          className="big-spacer-top"
        >
          <Radio
            checked={false}
            onCheck={[Function]}
            value="use-existing"
          >
            onboarding.token.use_existing_token
          </Radio>
        </div>
      </div>
      <div
        className="note big-spacer-top width-50"
      >
        <FormattedMessage
          defaultMessage="onboarding.token.text"
          id="onboarding.token.text"
          values={
            {
              "link": <ForwardRef(Link)
                target="_blank"
                to="/account/security"
              >
                onboarding.token.text.user_account
              </ForwardRef(Link)>,
            }
          }
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`generates token 3`] = `
<div
  className="boxed-group onboarding-step is-open"
>
  <div
    className="onboarding-step-number"
  >
    1
  </div>
  <div
    className="boxed-group-header"
  >
    <h2>
      onboarding.token.header
    </h2>
  </div>
  <div>
    <div
      className="boxed-group-inner"
    >
      <form
        onSubmit={[Function]}
      >
        <span
          className="text-middle"
        >
          my token
          : 
        </span>
        <strong
          className="spacer-right text-middle"
        >
          abcd1234
        </strong>
        <DeleteButton
          className="button-small text-middle"
          onClick={[Function]}
        />
      </form>
      <div
        className="note big-spacer-top width-50"
      >
        <FormattedMessage
          defaultMessage="onboarding.token.text"
          id="onboarding.token.text"
          values={
            {
              "link": <ForwardRef(Link)
                target="_blank"
                to="/account/security"
              >
                onboarding.token.text.user_account
              </ForwardRef(Link)>,
            }
          }
        />
      </div>
      <div
        className="big-spacer-top"
      >
        <Button
          className="js-continue"
          onClick={[Function]}
        >
          continue
        </Button>
      </div>
    </div>
  </div>
</div>
`;

exports[`revokes token 1`] = `
<div
  className="boxed-group onboarding-step is-open"
>
  <div
    className="onboarding-step-number"
  >
    1
  </div>
  <div
    className="boxed-group-header"
  >
    <h2>
      onboarding.token.header
    </h2>
  </div>
  <div>
    <div
      className="boxed-group-inner"
    >
      <form
        onSubmit={[Function]}
      >
        <span
          className="text-middle"
        >
          my token
          : 
        </span>
        <strong
          className="spacer-right text-middle"
        >
          abcd1234
        </strong>
        <DeleteButton
          className="button-small text-middle"
          onClick={[Function]}
        />
      </form>
      <div
        className="note big-spacer-top width-50"
      >
        <FormattedMessage
          defaultMessage="onboarding.token.text"
          id="onboarding.token.text"
          values={
            {
              "link": <ForwardRef(Link)
                target="_blank"
                to="/account/security"
              >
                onboarding.token.text.user_account
              </ForwardRef(Link)>,
            }
          }
        />
      </div>
      <div
        className="big-spacer-top"
      >
        <Button
          className="js-continue"
          onClick={[Function]}
        >
          continue
        </Button>
      </div>
    </div>
  </div>
</div>
`;

exports[`revokes token 2`] = `
<div
  className="boxed-group onboarding-step is-open"
>
  <div
    className="onboarding-step-number"
  >
    1
  </div>
  <div
    className="boxed-group-header"
  >
    <h2>
      onboarding.token.header
    </h2>
  </div>
  <div>
    <div
      className="boxed-group-inner"
    >
      <form
        onSubmit={[Function]}
      >
        <span
          className="text-middle"
        >
          my token
          : 
        </span>
        <strong
          className="spacer-right text-middle"
        >
          abcd1234
        </strong>
        <i
          className="spinner text-middle"
        />
      </form>
      <div
        className="note big-spacer-top width-50"
      >
        <FormattedMessage
          defaultMessage="onboarding.token.text"
          id="onboarding.token.text"
          values={
            {
              "link": <ForwardRef(Link)
                target="_blank"
                to="/account/security"
              >
                onboarding.token.text.user_account
              </ForwardRef(Link)>,
            }
          }
        />
      </div>
      <div
        className="big-spacer-top"
      >
        <Button
          className="js-continue"
          onClick={[Function]}
        >
          continue
        </Button>
      </div>
    </div>
  </div>
</div>
`;

exports[`revokes token 3`] = `
<div
  className="boxed-group onboarding-step is-open"
>
  <div
    className="onboarding-step-number"
  >
    1
  </div>
  <div
    className="boxed-group-header"
  >
    <h2>
      onboarding.token.header
    </h2>
  </div>
  <div>
    <div
      className="boxed-group-inner"
    >
      <div>
        <div>
          <Radio
            checked={true}
            onCheck={[Function]}
            value="generate"
          >
            onboarding.token.generate.PROJECT_ANALYSIS_TOKEN
          </Radio>
          <div
            className="big-spacer-top"
          >
            <form
              className="display-flex-center"
              onSubmit={[Function]}
            >
              <div
                className="display-flex-column"
              >
                <label
                  className="h3"
                  htmlFor="generate-token-input"
                >
                  onboarding.token.name.label
                  <DocumentationTooltip
                    className="spacer-left"
                    content="onboarding.token.name.help"
                    links={
                      [
                        {
                          "href": "/user-guide/user-account/generating-and-using-tokens/",
                          "label": "learn_more",
                        },
                      ]
                    }
                  />
                </label>
                <input
                  autoFocus={true}
                  className="input-super-large spacer-right spacer-top text-middle"
                  id="generate-token-input"
                  onChange={[Function]}
                  required={true}
                  type="text"
                  value=""
                />
              </div>
              <div
                className="display-flex-column spacer-left big-spacer-right"
              >
                <label
                  className="h3"
                  htmlFor="token-select-expiration"
                >
                  users.tokens.expires_in
                </label>
                <div
                  className="display-flex-center"
                >
                  <Select
                    className="spacer-top abs-width-100 spacer-right"
                    id="token-select-expiration"
                    isSearchable={false}
                    onChange={[Function]}
                    options={
                      [
                        {
                          "label": "users.tokens.expiration.30",
                          "value": 30,
                        },
                        {
                          "label": "users.tokens.expiration.90",
                          "value": 90,
                        },
                        {
                          "label": "users.tokens.expiration.365",
                          "value": 365,
                        },
                        {
                          "label": "users.tokens.expiration.0",
                          "value": 0,
                        },
                      ]
                    }
                    value={
                      {
                        "label": "users.tokens.expiration.30",
                        "value": 30,
                      }
                    }
                  />
                  <SubmitButton
                    className="text-middle spacer-top"
                    disabled={true}
                  >
                    onboarding.token.generate
                  </SubmitButton>
                </div>
              </div>
            </form>
            <ProjectTokenScopeInfo
              className="width-50"
            />
          </div>
        </div>
        <div
          className="big-spacer-top"
        >
          <Radio
            checked={false}
            onCheck={[Function]}
            value="use-existing"
          >
            onboarding.token.use_existing_token
          </Radio>
        </div>
      </div>
      <div
        className="note big-spacer-top width-50"
      >
        <FormattedMessage
          defaultMessage="onboarding.token.text"
          id="onboarding.token.text"
          values={
            {
              "link": <ForwardRef(Link)
                target="_blank"
                to="/account/security"
              >
                onboarding.token.text.user_account
              </ForwardRef(Link)>,
            }
          }
        />
      </div>
    </div>
  </div>
</div>
`;
