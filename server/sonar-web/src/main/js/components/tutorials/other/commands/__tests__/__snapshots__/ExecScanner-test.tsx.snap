// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly for "linux" 1`] = `
<div>
  <h4
    className="big-spacer-top spacer-bottom"
  >
    onboarding.analysis.sq_scanner.execute
  </h4>
  <InstanceMessage
    message="onboarding.analysis.sq_scanner.execute.text"
  >
    <Component />
  </InstanceMessage>
  <CodeSnippet
    isOneLine={false}
    snippet={
      [
        "sonar-scanner",
        "-Dsonar.projectKey=projectKey",
        "-Dsonar.sources=.",
        undefined,
        "-Dsonar.host.url=host",
        "-Dsonar.login=token",
      ]
    }
  />
  <p
    className="big-spacer-top markdown"
  >
    <FormattedMessage
      defaultMessage="onboarding.analysis.sq_scanner.docs"
      id="onboarding.analysis.sq_scanner.docs"
      values={
        {
          "link": <withAppStateContext(DocLink)
            to="/analyzing-source-code/scanners/sonarscanner/"
          >
            onboarding.analysis.sq_scanner.docs_link
          </withAppStateContext(DocLink)>,
        }
      }
    />
  </p>
  <DoneNextSteps
    component={
      {
        "breadcrumbs": [],
        "key": "projectKey",
        "name": "MyProject",
        "qualifier": "TRK",
        "qualityGate": {
          "isDefault": true,
          "key": "30",
          "name": "Sonar way",
        },
        "qualityProfiles": [
          {
            "deleted": false,
            "key": "my-qp",
            "language": "ts",
            "name": "Sonar way",
          },
        ],
        "tags": [],
      }
    }
  />
</div>
`;

exports[`should render correctly for "mac" 1`] = `
<div>
  <h4
    className="big-spacer-top spacer-bottom"
  >
    onboarding.analysis.sq_scanner.execute
  </h4>
  <InstanceMessage
    message="onboarding.analysis.sq_scanner.execute.text"
  >
    <Component />
  </InstanceMessage>
  <CodeSnippet
    isOneLine={false}
    snippet={
      [
        "sonar-scanner",
        "-Dsonar.projectKey=projectKey",
        "-Dsonar.sources=.",
        undefined,
        "-Dsonar.host.url=host",
        "-Dsonar.login=token",
      ]
    }
  />
  <p
    className="big-spacer-top markdown"
  >
    <FormattedMessage
      defaultMessage="onboarding.analysis.sq_scanner.docs"
      id="onboarding.analysis.sq_scanner.docs"
      values={
        {
          "link": <withAppStateContext(DocLink)
            to="/analyzing-source-code/scanners/sonarscanner/"
          >
            onboarding.analysis.sq_scanner.docs_link
          </withAppStateContext(DocLink)>,
        }
      }
    />
  </p>
  <DoneNextSteps
    component={
      {
        "breadcrumbs": [],
        "key": "projectKey",
        "name": "MyProject",
        "qualifier": "TRK",
        "qualityGate": {
          "isDefault": true,
          "key": "30",
          "name": "Sonar way",
        },
        "qualityProfiles": [
          {
            "deleted": false,
            "key": "my-qp",
            "language": "ts",
            "name": "Sonar way",
          },
        ],
        "tags": [],
      }
    }
  />
</div>
`;

exports[`should render correctly for "win" 1`] = `
<div>
  <h4
    className="big-spacer-top spacer-bottom"
  >
    onboarding.analysis.sq_scanner.execute
  </h4>
  <InstanceMessage
    message="onboarding.analysis.sq_scanner.execute.text"
  >
    <Component />
  </InstanceMessage>
  <CodeSnippet
    isOneLine={true}
    snippet={
      [
        "sonar-scanner.bat",
        "-D"sonar.projectKey=projectKey"",
        "-D"sonar.sources=."",
        undefined,
        "-D"sonar.host.url=host"",
        "-D"sonar.login=token"",
      ]
    }
  />
  <p
    className="big-spacer-top markdown"
  >
    <FormattedMessage
      defaultMessage="onboarding.analysis.sq_scanner.docs"
      id="onboarding.analysis.sq_scanner.docs"
      values={
        {
          "link": <withAppStateContext(DocLink)
            to="/analyzing-source-code/scanners/sonarscanner/"
          >
            onboarding.analysis.sq_scanner.docs_link
          </withAppStateContext(DocLink)>,
        }
      }
    />
  </p>
  <DoneNextSteps
    component={
      {
        "breadcrumbs": [],
        "key": "projectKey",
        "name": "MyProject",
        "qualifier": "TRK",
        "qualityGate": {
          "isDefault": true,
          "key": "30",
          "name": "Sonar way",
        },
        "qualityProfiles": [
          {
            "deleted": false,
            "key": "my-qp",
            "language": "ts",
            "name": "Sonar way",
          },
        ],
        "tags": [],
      }
    }
  />
</div>
`;

exports[`should render correctly for cfamily 1`] = `
<div>
  <h4
    className="big-spacer-top spacer-bottom"
  >
    onboarding.analysis.sq_scanner.execute
  </h4>
  <InstanceMessage
    message="onboarding.analysis.sq_scanner.execute.text"
  >
    <Component />
  </InstanceMessage>
  <CodeSnippet
    isOneLine={false}
    snippet={
      [
        "sonar-scanner",
        "-Dsonar.projectKey=projectKey",
        "-Dsonar.sources=.",
        "-Dsonar.cfamily.build-wrapper-output=bw-output",
        "-Dsonar.host.url=host",
        "-Dsonar.login=token",
      ]
    }
  />
  <p
    className="big-spacer-top markdown"
  >
    <FormattedMessage
      defaultMessage="onboarding.analysis.sq_scanner.docs"
      id="onboarding.analysis.sq_scanner.docs"
      values={
        {
          "link": <withAppStateContext(DocLink)
            to="/analyzing-source-code/scanners/sonarscanner/"
          >
            onboarding.analysis.sq_scanner.docs_link
          </withAppStateContext(DocLink)>,
        }
      }
    />
  </p>
  <DoneNextSteps
    component={
      {
        "breadcrumbs": [],
        "key": "projectKey",
        "name": "MyProject",
        "qualifier": "TRK",
        "qualityGate": {
          "isDefault": true,
          "key": "30",
          "name": "Sonar way",
        },
        "qualityProfiles": [
          {
            "deleted": false,
            "key": "my-qp",
            "language": "ts",
            "name": "Sonar way",
          },
        ],
        "tags": [],
      }
    }
  />
</div>
`;

exports[`should render correctly for remote execution 1`] = `
<div>
  <h4
    className="big-spacer-top spacer-bottom"
  >
    onboarding.analysis.sq_scanner.execute
  </h4>
  <InstanceMessage
    message="onboarding.analysis.sq_scanner.execute.text"
  >
    <Component />
  </InstanceMessage>
  <CodeSnippet
    isOneLine={false}
    snippet={
      [
        "sonar-scanner",
        "-Dsonar.projectKey=projectKey",
        "-Dsonar.sources=.",
        undefined,
        "-Dsonar.host.url=host",
        undefined,
      ]
    }
  />
  <p
    className="big-spacer-top markdown"
  >
    <FormattedMessage
      defaultMessage="onboarding.analysis.sq_scanner.docs"
      id="onboarding.analysis.sq_scanner.docs"
      values={
        {
          "link": <withAppStateContext(DocLink)
            to="/analyzing-source-code/scanners/sonarscanner/"
          >
            onboarding.analysis.sq_scanner.docs_link
          </withAppStateContext(DocLink)>,
        }
      }
    />
  </p>
  <DoneNextSteps
    component={
      {
        "breadcrumbs": [],
        "key": "projectKey",
        "name": "MyProject",
        "qualifier": "TRK",
        "qualityGate": {
          "isDefault": true,
          "key": "30",
          "name": "Sonar way",
        },
        "qualityProfiles": [
          {
            "deleted": false,
            "key": "my-qp",
            "language": "ts",
            "name": "Sonar way",
          },
        ],
        "tags": [],
      }
    }
  />
</div>
`;
