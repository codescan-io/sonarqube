// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly for azure: content 1`] = `
<div
  className="boxed-group-inner"
>
  <p
    className="big-spacer-bottom"
  >
    <FormattedMessage
      defaultMessage="onboarding.tutorial.with.jenkins.webhook.intro.sentence"
      id="onboarding.tutorial.with.jenkins.webhook.intro.sentence"
      values={
        {
          "link": <ButtonLink
            onClick={[MockFunction]}
          >
            onboarding.tutorial.with.jenkins.webhook.intro.link
          </ButtonLink>,
        }
      }
    />
  </p>
  <ol
    className="list-styled"
  />
  <Button
    className="big-spacer-top"
    onClick={[MockFunction]}
  >
    continue
    <ChevronRightIcon
      size={13}
    />
  </Button>
</div>
`;

exports[`should render correctly for azure: wrapper 1`] = `
<Step
  finished={false}
  onOpen={[MockFunction]}
  open={false}
  renderForm={[Function]}
  stepNumber={2}
  stepTitle="onboarding.tutorial.with.jenkins.webhook.azure.title"
/>
`;

exports[`should render correctly for bitbucket: content 1`] = `
<div
  className="boxed-group-inner"
>
  <p
    className="big-spacer-bottom"
  >
    <FormattedMessage
      defaultMessage="onboarding.tutorial.with.jenkins.webhook.intro.sentence"
      id="onboarding.tutorial.with.jenkins.webhook.intro.sentence"
      values={
        {
          "link": <ButtonLink
            onClick={[MockFunction]}
          >
            onboarding.tutorial.with.jenkins.webhook.intro.link
          </ButtonLink>,
        }
      }
    />
  </p>
  <ol
    className="list-styled"
  >
    <WebhookStepBitbucket
      alm="bitbucket"
      almBinding={
        {
          "alm": "github",
          "key": "key",
        }
      }
      branchesEnabled={true}
      projectBinding={
        {
          "alm": "bitbucket",
          "key": "foo",
          "monorepo": true,
          "repository": "PROJECT_KEY",
          "slug": "repo-slug",
        }
      }
    />
  </ol>
  <Button
    className="big-spacer-top"
    onClick={[MockFunction]}
  >
    continue
    <ChevronRightIcon
      size={13}
    />
  </Button>
</div>
`;

exports[`should render correctly for bitbucket: wrapper 1`] = `
<Step
  finished={false}
  onOpen={[MockFunction]}
  open={false}
  renderForm={[Function]}
  stepNumber={2}
  stepTitle="onboarding.tutorial.with.jenkins.webhook.bitbucket.title"
/>
`;

exports[`should render correctly for bitbucketcloud: content 1`] = `
<div
  className="boxed-group-inner"
>
  <p
    className="big-spacer-bottom"
  >
    <FormattedMessage
      defaultMessage="onboarding.tutorial.with.jenkins.webhook.intro.sentence"
      id="onboarding.tutorial.with.jenkins.webhook.intro.sentence"
      values={
        {
          "link": <ButtonLink
            onClick={[MockFunction]}
          >
            onboarding.tutorial.with.jenkins.webhook.intro.link
          </ButtonLink>,
        }
      }
    />
  </p>
  <ol
    className="list-styled"
  >
    <WebhookStepBitbucket
      alm="bitbucketcloud"
      almBinding={
        {
          "alm": "github",
          "key": "key",
        }
      }
      branchesEnabled={true}
      projectBinding={
        {
          "alm": "bitbucketcloud",
          "key": "foo",
          "monorepo": true,
          "repository": "repo-slug",
        }
      }
    />
  </ol>
  <Button
    className="big-spacer-top"
    onClick={[MockFunction]}
  >
    continue
    <ChevronRightIcon
      size={13}
    />
  </Button>
</div>
`;

exports[`should render correctly for bitbucketcloud: wrapper 1`] = `
<Step
  finished={false}
  onOpen={[MockFunction]}
  open={false}
  renderForm={[Function]}
  stepNumber={2}
  stepTitle="onboarding.tutorial.with.jenkins.webhook.bitbucketcloud.title"
/>
`;

exports[`should render correctly for github: content 1`] = `
<div
  className="boxed-group-inner"
>
  <p
    className="big-spacer-bottom"
  >
    <FormattedMessage
      defaultMessage="onboarding.tutorial.with.jenkins.webhook.intro.sentence"
      id="onboarding.tutorial.with.jenkins.webhook.intro.sentence"
      values={
        {
          "link": <ButtonLink
            onClick={[MockFunction]}
          >
            onboarding.tutorial.with.jenkins.webhook.intro.link
          </ButtonLink>,
        }
      }
    />
  </p>
  <ol
    className="list-styled"
  >
    <WebhookStepGithub
      almBinding={
        {
          "alm": "github",
          "key": "key",
        }
      }
      branchesEnabled={true}
      projectBinding={
        {
          "alm": "github",
          "key": "foo",
          "monorepo": true,
          "repository": "PROJECT_KEY",
        }
      }
    />
  </ol>
  <Button
    className="big-spacer-top"
    onClick={[MockFunction]}
  >
    continue
    <ChevronRightIcon
      size={13}
    />
  </Button>
</div>
`;

exports[`should render correctly for github: wrapper 1`] = `
<Step
  finished={false}
  onOpen={[MockFunction]}
  open={false}
  renderForm={[Function]}
  stepNumber={2}
  stepTitle="onboarding.tutorial.with.jenkins.webhook.github.title"
/>
`;

exports[`should render correctly for gitlab: content 1`] = `
<div
  className="boxed-group-inner"
>
  <p
    className="big-spacer-bottom"
  >
    <FormattedMessage
      defaultMessage="onboarding.tutorial.with.jenkins.webhook.intro.sentence"
      id="onboarding.tutorial.with.jenkins.webhook.intro.sentence"
      values={
        {
          "link": <ButtonLink
            onClick={[MockFunction]}
          >
            onboarding.tutorial.with.jenkins.webhook.intro.link
          </ButtonLink>,
        }
      }
    />
  </p>
  <ol
    className="list-styled"
  >
    <WebhookStepGitLab
      branchesEnabled={true}
    />
  </ol>
  <Button
    className="big-spacer-top"
    onClick={[MockFunction]}
  >
    continue
    <ChevronRightIcon
      size={13}
    />
  </Button>
</div>
`;

exports[`should render correctly for gitlab: wrapper 1`] = `
<Step
  finished={false}
  onOpen={[MockFunction]}
  open={false}
  renderForm={[Function]}
  stepNumber={2}
  stepTitle="onboarding.tutorial.with.jenkins.webhook.gitlab.title"
/>
`;
