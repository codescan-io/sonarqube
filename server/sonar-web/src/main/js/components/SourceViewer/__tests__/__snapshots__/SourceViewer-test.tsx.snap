// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly 1`] = `
<ContextProvider
  value={
    {
      "branchLike": {
        "analysisDate": "2018-01-01",
        "excludedFromPurge": true,
        "isMain": true,
        "name": "master",
      },
      "file": {
        "canMarkAsFavorite": true,
        "fav": false,
        "key": "project:foo/bar.ts",
        "leakPeriodDate": "2018-06-20T17:12:19+0200",
        "longName": "foo/bar.ts",
        "measures": {
          "coverage": "85.2",
          "duplicationDensity": "1.0",
          "issues": "12",
          "lines": "56",
        },
        "name": "foo/bar.ts",
        "path": "foo/bar.ts",
        "project": "project",
        "projectName": "MyProject",
        "q": "FIL",
        "uuid": "foo-bar",
      },
    }
  }
>
  <div
    className="source-viewer"
  >
    <ContextConsumer>
      <Component />
    </ContextConsumer>
    <SourceViewerCode
      branchLike={
        {
          "analysisDate": "2018-01-01",
          "excludedFromPurge": true,
          "isMain": true,
          "name": "master",
        }
      }
      displayAllIssues={false}
      displayIssueLocationsCount={true}
      displayIssueLocationsLink={true}
      displayLocationMarkers={true}
      duplicationsByLine={{}}
      hasSourcesAfter={false}
      hasSourcesBefore={false}
      highlightedSymbols={[]}
      issueLocationsByLine={
        {
          "25": [
            {
              "from": 0,
              "line": 25,
              "to": 999999,
            },
          ],
          "26": [
            {
              "from": 0,
              "line": 26,
              "to": 15,
            },
          ],
        }
      }
      issues={
        [
          {
            "actions": [],
            "component": "main.js",
            "componentEnabled": true,
            "componentLongName": "main.js",
            "componentQualifier": "FIL",
            "componentUuid": "foo1234",
            "creationDate": "2017-03-01T09:36:01+0100",
            "flows": [],
            "flowsWithType": [],
            "key": "AVsae-CQS-9G3txfbFN2",
            "line": 25,
            "message": "Reduce the number of conditional operators (4) used in the expression",
            "project": "myproject",
            "projectKey": "foo",
            "projectName": "Foo",
            "rule": "javascript:S1067",
            "ruleName": "foo",
            "secondaryLocations": [],
            "severity": "MAJOR",
            "status": "OPEN",
            "textRange": {
              "endLine": 26,
              "endOffset": 15,
              "startLine": 25,
              "startOffset": 0,
            },
            "transitions": [],
            "type": "BUG",
          },
        ]
      }
      issuesByLine={
        {
          "26": [
            {
              "actions": [],
              "component": "main.js",
              "componentEnabled": true,
              "componentLongName": "main.js",
              "componentQualifier": "FIL",
              "componentUuid": "foo1234",
              "creationDate": "2017-03-01T09:36:01+0100",
              "flows": [],
              "flowsWithType": [],
              "key": "AVsae-CQS-9G3txfbFN2",
              "line": 25,
              "message": "Reduce the number of conditional operators (4) used in the expression",
              "project": "myproject",
              "projectKey": "foo",
              "projectName": "Foo",
              "rule": "javascript:S1067",
              "ruleName": "foo",
              "secondaryLocations": [],
              "severity": "MAJOR",
              "status": "OPEN",
              "textRange": {
                "endLine": 26,
                "endOffset": 15,
                "startLine": 25,
                "startOffset": 0,
              },
              "transitions": [],
              "type": "BUG",
            },
          ],
        }
      }
      loadDuplications={[Function]}
      loadSourcesAfter={[Function]}
      loadSourcesBefore={[Function]}
      loadingSourcesAfter={false}
      loadingSourcesBefore={false}
      onIssueChange={[Function]}
      onIssuePopupToggle={[Function]}
      onIssueSelect={[Function]}
      onIssueUnselect={[Function]}
      onIssuesClose={[Function]}
      onIssuesOpen={[Function]}
      onSymbolClick={[Function]}
      openIssuesByLine={{}}
      renderDuplicationPopup={[Function]}
      sources={[]}
      symbolsByLine={{}}
    />
  </div>
</ContextProvider>
`;
