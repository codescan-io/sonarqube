sonar {
  properties {
    property 'sonar.projectName', "${projectTitle} :: Core"
  }
}

dependencies {
  // please keep list ordered

  api 'ch.qos.logback:logback-classic'
  api 'ch.qos.logback:logback-core'
  api 'com.google.guava:guava'
  api 'com.google.protobuf:protobuf-java'
  api 'commons-codec:commons-codec'
  api 'commons-io:commons-io'
  api 'commons-lang:commons-lang'
  api 'javax.annotation:javax.annotation-api'
  api 'javax.inject:javax.inject'
  api 'org.codehaus.sonar:sonar-classloader'
  api 'org.slf4j:slf4j-api'
  api 'org.sonarsource.api.plugin:sonar-plugin-api'
  api 'org.sonarsource.update-center:sonar-update-center-common'
  api 'org.springframework:spring-context'
  api project(':sonar-plugin-api-impl')

  compileOnlyApi 'com.google.code.findbugs:jsr305'
  compileOnlyApi 'com.google.code.gson:gson'

  testImplementation 'com.tngtech.java:junit-dataprovider'
  testImplementation 'junit:junit'
  testImplementation 'org.assertj:assertj-core'
  testImplementation 'org.hamcrest:hamcrest-core'
  testImplementation 'org.mockito:mockito-core'
  testImplementation 'org.simpleframework:simple'
  testImplementation 'org.sonarsource.api.plugin:sonar-plugin-api-test-fixtures'
  testImplementation project(':sonar-testing-harness')

  testCompileOnly 'com.google.code.findbugs:jsr305'
}

// Produce Java 11 bytecode while making sure the code does not use any APIs from Java 17
tasks.withType(JavaCompile) {
  options.release = 11
}

// Used by sonar-db-core to run DB Unit Tests
artifactoryPublish.skip = false
publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
      if (release) {
        artifact sourcesJar
        artifact javadocJar
      }
    }
  }
}
